[{"/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/index.js":"1","/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/reportWebVitals.js":"2","/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/App.js":"3","/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/Components/Feed.js":"4","/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/Components/CreateTweet.js":"5","/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/Components/ViewTweet.js":"6","/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/Components/UpdateTweet.js":"7"},{"size":587,"mtime":1611105161039,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611105161039,"results":"10","hashOfConfig":"9"},{"size":1168,"mtime":1611162942195,"results":"11","hashOfConfig":"9"},{"size":1405,"mtime":1611168911774,"results":"12","hashOfConfig":"9"},{"size":2452,"mtime":1611105161038,"results":"13","hashOfConfig":"9"},{"size":3238,"mtime":1611195750555,"results":"14","hashOfConfig":"9"},{"size":2435,"mtime":1611105161038,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1yi9xu9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/index.js",[],["33","34"],"/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/reportWebVitals.js",[],"/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/App.js",[],"/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/Components/Feed.js",[],"/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/Components/CreateTweet.js",["35"],"import React from \"react\"\nimport \"../App.css\";\nimport { useRef } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nconst CreateTweetForm = (props) => {\n        const titleInput = useRef(null);\n        const authorInput = useRef(null);\n        const contentInput = useRef(null);\n    \n        const createTweet = async (event) => {\n            event.preventDefault();\n            const title = titleInput.current.value;\n            const author = authorInput.current.value;\n            const content = contentInput.current.value;\n            const body = JSON.stringify({\n                title,\n                author,\n                content\n            });\n    \n            event.currentTarget.reset();\n            \n            try {\n                const response = await fetch('http://localhost:3000/tweets',\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-type\": \"application/json\",\n                    },\n                    body: body,\n                }\n              );\n              props.history.push('/feed')\n            } catch (error) {\n                console.error(error)\n            }\n        }\n\n    return (\n        <>\n            <div className=\"container d-flex justify-content-center\">\n                <Card style={{width: \"400px\"}} border=\"primary\" className=\"m-3 shadow\">\n                    <Card.Body>\n                    <Card.Title className='text-center font-weight-bold'>\n                        Create Tweet\n                    </Card.Title> \n                    <Form onSubmit={createTweet} method=\"post\">\n                        <Form.Label>Tweet Title:</Form.Label>\n                                <Form.Control type=\"text\" name=\"title\" ref={titleInput} />\n                            <Form.Label>Tweet Author: </Form.Label>\n                                <Form.Control  type=\"text\" name=\"author\" ref={authorInput} />\n                            <Form.Label>Tweet Content: </Form.Label>\n                                <Form.Control  type=\"text\" name=\"content\" ref={contentInput} />\n                            <Button className=\"mt-4 float-right\" type=\"submit\"  id=\"submit-btn\" >Send Tweet </Button>\n                    </Form>\n                    </Card.Body>\n                </Card>\n            </div>\n        </>\n    );\n};\n\nexport default CreateTweetForm;","/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/Components/ViewTweet.js",["36"],"/Users/michaeltruong/SEIR/unit4_postgresql:rubyonrails/w12/w12d05_fullstack_reactRails/homework/Tweetr/tweetr-client/src/Components/UpdateTweet.js",["37"],"import React from \"react\"\nimport \"../App.css\";\nimport { useRef } from 'react'\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nconst UpdateTweetForm = (routerProps) => {\n    const updateTitleInput = useRef(null);\n    const updateAuthorInput = useRef(null);\n    const updateContentInput = useRef(null);\n\n    const updateTweet = async (event) => {\n        event.preventDefault();\n        const title = updateTitleInput.current.value;\n        const author = updateAuthorInput.current.value;\n        const content = updateContentInput.current.value;\n        const body = JSON.stringify({\n            title,\n            author,\n            content\n        });\n\n        event.currentTarget.reset();\n\n        try {\n            const response = await fetch(`http://localhost:3000/tweets/${routerProps.match.params.id}`,\n            {\n                method: \"PUT\",\n                headers: {\n                    \"Content-type\": \"application/json\",\n                },\n                body: body,\n            }\n          );\n\n          routerProps.history.push('/feed')\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"container d-flex justify-content-center\">\n                <Card style={{width: \"400px\"}} border=\"primary\" className=\"m-3 shadow\">\n                    <Card.Body>\n                    <Card.Title className='mx-3 text-center font-weight-bold'>\n                        Update Tweet\n                    </Card.Title >\n                    <Form onSubmit={updateTweet} method=\"put\">\n                        <Form.Label>Tweet Title:</Form.Label>\n                            <Form.Control type=\"text\" name=\"title\" ref={updateTitleInput} />\n                        <Form.Label>Tweet Author:</Form.Label>\n                            <Form.Control type=\"text\" name=\"author\" ref={updateAuthorInput} />\n                        <Form.Label>Tweet Content:</Form.Label>\n                            <Form.Control type=\"text\" name=\"content\" ref={updateContentInput} />\n                        <Button className=\"mt-4 float-right\" type=\"submit\" value=\"Update Tweet\" id=\"submit-btn\">Update tweets\n                        </Button>\n                    </Form> \n                    </Card.Body>\n                </Card>\n            </div>\n        </>\n    );\n};\n\nexport default UpdateTweetForm;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":27,"column":23,"nodeType":"44","messageId":"45","endLine":27,"endColumn":31},{"ruleId":"46","severity":1,"message":"47","line":47,"column":6,"nodeType":"48","endLine":47,"endColumn":8,"suggestions":"49"},{"ruleId":"42","severity":1,"message":"43","line":27,"column":19,"nodeType":"44","messageId":"45","endLine":27,"endColumn":27},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTweet'. Either include it or remove the dependency array.","ArrayExpression",["52"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [fetchTweet]",{"range":"55","text":"56"},[1537,1539],"[fetchTweet]"]